/**
 * @module routes/controllers/createAccountPage
 * @fileoverview createAccountPage route's controller. Used for
 *    the createAccountPage
 * @exports {Object} Functions to attach to the `createAccountPage` router.
 * @require cookie-helper
 */

 /* cookies
  * This is to help with handle cookies for user validation
  */
const cookies = require('../../scripts/cookie-helper.js');


/**
 * @function sendCreateAccountPage
 * @description Send the base page rendered by `Handlebars.js`. Compilation
 *    of HBS templates is handled by the HBS engine.
 * @param {Object} req The request object generated by `Express`.
 * @param {Object} res The response object generated by `Express`.
 * @param {Function} next The function to call when this method is done executing
 *    and does not return or render anything (no `res` methods called).
 */
const sendCreateAccountPage = (req, res, next) => {
  // updates and validates user cookie
  cookies.handleNormalPageCookie(req.cookies)
    .then(res_cookie => {
      if (res_cookie == null || res_cookie == "undefined") {
        res.clearCookie("CID");
      } else {
        res.cookie("CID", res_cookie);
      }
      var page = "";
      // if user isnt logged in
      if (req.cookies["CID"] == null || req.cookies["CID"] == "undefined") {
        page = "create_account";
      // if user is logged in redirect them
      } else {
        if (req.cookies["CID"]["isAdmin"] == 1) {
          page = "admin_dashboard";
        } else {
          page = "user_dashboard";
        }
      }
      // handles to redirection
      if (page == "create_account") {
        res.render('create_account', { title: 'Sprout Creek Farm Create Account',
                                       page: 'login' });
      } else {
        res.redirect(page);
      }
    });
};


module.exports = {
  sendCreateAccountPage,
};
