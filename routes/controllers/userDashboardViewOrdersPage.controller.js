/**
 * @module routes/controllers/userDashboardViewOrdersPage
 * @fileoverview userDashboardViewOrdersPage route's controller.
 *    Exports functions to be used by each route handler.
 * @exports {Object} Functions to attach to the
 *    `userDashboardViewOrdersPage` router.
 * @require cookie-helper
 */

/* cookies
 * This is to help with handle cookies for user validation
 */
const cookies = require('../../scripts/cookie-helper.js');


/**
 * @function sendUserDashboardViewOrdersPage
 * @description Send the base page rendered by `Handlebars.js`. Compilation
 *    of HBS templates is handled by the HBS engine.
 * @param {Object} req The request object generated by `Express`.
 * @param {Object} res The response object generated by `Express`.
 * @param {Function} next The function to call when this method is done executing
 *    and does not return or render anything (no `res` methods called).
 */
const sendUserDashboardViewOrdersPage = (req, res, next) => {
  // handle the cookies of a user and update them
  cookies.handleNormalPageCookie(req.cookies)
    .then(res_cookie => {
      if (res_cookie == "undefined" || res_cookie == null) {
        res.clearCookie("CID");
        res.redirect("login");
      } else {
        res.cookie("CID", res_cookie);
        // user is an admin or not direct correctly
        if (res_cookie["isAdmin"] == 1) {
          res.redirect("admin_dashboard");
        } else {
          res.render('user_dashboard-view_orders', { 
            title: 'Sprout Creek Farm User Dashboard',
            page: 'login' });
        }
      }

    });
};


module.exports = {
  sendUserDashboardViewOrdersPage,
};
