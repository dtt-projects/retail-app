/**
 * @module routes/controllers/forgotPasswordPage
 * @fileoverview forgotPasswordPage route's controller. Exports functions
 *    to be used by each route handler.
 * @exports {Object} Functions to attach to the `forgotPasswordPage` router.
 * @require cookie-helper
 */

 /* cookies
  * This is to help with handle cookies for user validation
  */
 const cookies = require('../../scripts/cookie-helper.js');


/**
 * @function sendForgotPasswordPage
 * @description Send the base page rendered by `Handlebars.js`. Compilation
 *    of HBS templates is handled by the HBS engine.
 * @param {Object} req The request object generated by `Express`.
 * @param {Object} res The response object generated by `Express`.
 * @param {Function} next The function to call when this method is done executing
 *    and does not return or render anything (no `res` methods called).
 */
const sendForgotPasswordPage = (req, res, next) => {
  // update user cookie if they visit this page
  cookies.handleNormalPageCookie(req.cookies)
    .then(res_cookie => {
      if (res_cookie == null || res_cookie == "undefined") {
        res.clearCookie("CID");
      } else {
        res.cookie("CID", res_cookie);
      }
      // if user is logged in redirect
      var age = "";
      if (req.cookies["CID"] == null || req.cookies["CID"] == "undefined") {
        page = "forgot_password";
      // check if the cookie is valid
      } else {
        if (req.cookies["CID"]["isAdmin"] == 1) {
          page = "admin_dashboard";
        } else {
          page = "user_dashboard";
        }
      }

      // user is not logged in
      if (page == "forgot_password") {
        res.render('forgot_password', {
          title: 'Sprout Creek Farm Forgot Password',
          page: 'login' });
      } else {
        res.redirect(page);

      }
    });
};


module.exports = {
  sendForgotPasswordPage,
};
