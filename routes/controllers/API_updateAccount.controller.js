/**
 * @module routes/controllers/API_updateAccount
 * @fileoverview API_updateAccount route's controller. Handle all business
 * logic relative to updating an account.
 * @exports {Object} Functions to attach to the `API_updateAccount` router.
 * @require session-helper
 */

 /* sessions
  * This is to help with handling sessions to maintain cart and auth
  */
 const sessions = require('../../scripts/session-helper.js');
/**
 * @function updateAccount
 * @description Create an account based on the form data and validate.
 * @param {Object} req The request object generated by `Express`.
 * @param {Object} res The response object generated by `Express`.
 * @param {Function} next The function to call when this method is done executing
 *    and does not return or render anything (no `res` methods called).
 */
const updateAccount = (req, res, next) => {
  // read database creds from secret file
  const fs = require("fs");
  fs.readFile('.hiddenCreds', (err, data) => {
      if (err) {
        console.log(err);
        res.status(400);
        res.setHeader('Content-Type', 'plain/text');
        res.send("Account creation failed!");
      } else {
        // get file data and convert to json
        json = JSON.parse(data.toString());
        var email = req.body["email"];
        var mysql = require("mysql");

        // log into database
        var con = mysql.createConnection({
          host: json[0]["host"],
          user: json[0]["user"],
          password: json[0]["password"],
          database: json[0]["database"]
        });
        con.connect(function(err) {
          if (err) {
            console.log(err);
            res.status(400);
            res.setHeader('Content-Type', 'plain/text');
            res.send("Account creation failed!");
          }
        });
        var statement = ""
        // current insert statement for database
        if (req.body["password"] == "") {
          statement = ("UPDATE accounts SET FIRSTNAME='" + req.body["first_name"]
              + "', LASTNAME='" + req.body["last_name"]
              + "', ADDRESS='" + req.body["address"]
              + "', CITY='" + req.body["city"]
              + "', ZIP='" + req.body["zip"]
              + "', PHONENUMBER='" + req.body["phone_number"]
              + "', UPDATEDDATE='CURRENT_TIMESTAMP'"
              + "WHERE aid='" + req.body["aid"] + "'");
        } else {
          statement = ("UPDATE accounts SET FIRSTNAME='" + req.body["first_name"]
              + "', LASTNAME='" + req.body["last_name"]
              + "', ADDRESS='" + req.body["address"]
              + "', CITY='" + req.body["city"]
              + "', ZIP='" + req.body["zip"]
              + "', PHONENUMBER='" + req.body["phone_number"]
              + "', PASSWORD='" + req.body["password"]
              + "', UPDATEDDATE='CURRENT_TIMESTAMP'"
              + "WHERE aid='" + req.body["aid"] + "'");
        }


        // run statement on the database
        con.query(statement, function(err, result) {
          if (err) {
            console.log(err);
            res.status(400);
            res.setHeader('Content-Type', 'plain/text');
            res.send("Account creation failed!");
          } else {
            // statement was successful
            data = {
              "username": req.body["username"],
              "password": req.body["password"],
              "isAdmin": 0,
              "email": req.body["email"]
            }
            // update ibm customer

            }
          });
      }
  });
};

// allows use outside of the file
module.exports = {
  updateAccount,
};
